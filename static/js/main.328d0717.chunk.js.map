{"version":3,"sources":["component/card/card.component.jsx","component/card-list/card-list.component.jsx","component/searchBox/searchBox.coponent.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","map","SearchBox","placeholder","searchWord","type","onChange","App","handleChange","e","setState","searchValue","target","value","state","monsters","fetch","then","response","json","users","this","filterMonster","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGaA,G,kBAAO,SAAAC,GAChB,OACI,sBAAKC,UAAU,OAAf,UACI,qBAAKC,IAAI,UACTC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACH,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aCLjBC,EAAW,SAAAR,GACxB,OACA,qBAAKC,UAAU,YAAf,SACKD,EAAMI,QAAQK,KAAK,SAAAL,GAAO,OAC3B,cAAC,EAAD,CAAyBA,QAASA,GAArBA,EAAQC,UCNZK,G,MAAa,SAAC,GAAiC,IAA9BC,EAA6B,EAA7BA,YAAYC,EAAiB,EAAjBA,WACtC,OACI,8BACI,uBACAX,UAAU,SACVY,KAAK,QACLF,YAAaA,EACbG,SAAWF,QC4BRG,E,kDA/Bb,aAAc,IAAD,8BACX,gBAYFC,aAAc,SAACC,GACd,EAAKC,SAAU,CAAEC,YAAcF,EAAEG,OAAOC,SAZvC,EAAKC,MAAQ,CACXC,SAAW,GACXJ,YAAc,IAJL,E,gEAOO,IAAD,OACjBK,MAAM,8CACLC,MAAM,SAAAC,GAAQ,OAAIA,EAASC,UAC3BF,MAAM,SAAAG,GAAK,OAAI,EAAKV,SAAS,CAAEK,SAAWK,S,+BAOpC,IAAD,SAC4BC,KAAKP,MAA/BC,EADF,EACEA,SAAUJ,EADZ,EACYA,YACZW,EAAgBP,EAASQ,QAAQ,SAAA3B,GAAO,OAC5CA,EAAQE,KAAK0B,cAAcC,SAASd,EAAYe,wBAEpD,OACE,sBAAKjC,UAAU,MAAf,UACC,kDACA,cAAC,EAAD,CAAYU,YAAY,iBAAiBC,WAAY,SAACK,GAAD,OAAO,EAAKD,aAAaC,MAC9E,cAAC,EAAD,CAAUb,QAAS0B,W,GA3BNK,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.328d0717.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"../card/card.styles.css\"\r\n\r\nexport const Card = props => {\r\n    return(\r\n        <div className=\"card\">\r\n            <img alt=\"monster\"\r\n            src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n            <h4>{props.monster.name}</h4>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport \"../card-list/card-list.styles.css\"\r\nimport { Card } from '../card/card.component'\r\n\r\nexport const CardList = props =>{\r\nreturn (\r\n<div className=\"card-list\">\r\n    {props.monster.map( monster =>(\r\n    <Card key = {monster.id} monster={monster}/>\r\n    )\r\n    )}\r\n</div>\r\n)}","import React from 'react';\r\nimport \"../searchBox/searchBox.style.css\";\r\nexport const SearchBox =  ( { placeholder,searchWord }) => {\r\n    return (\r\n        <div>\r\n            <input \r\n            className=\"search\"\r\n            type=\"seach\"\r\n            placeholder={placeholder}\r\n            onChange= {searchWord}\r\n            />\r\n        </div>\r\n    )\r\n}","import React , {Component} from 'react';\nimport './App.css';\nimport {  CardList } from \"./component/card-list/card-list.component\";\nimport { SearchBox } from \"./component/searchBox/searchBox.coponent\";\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      monsters : [],\n      searchValue : ''\n    }\n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then( response => response.json())\n    .then( users => this.setState({ monsters : users}) )\n  }\n\n  handleChange= (e) => {\n   this.setState( { searchValue : e.target.value });\n  }\n\n  render(){\n    const { monsters, searchValue } = this.state;\n    const filterMonster = monsters.filter( monster => \n      monster.name.toLowerCase().includes(searchValue.toLocaleLowerCase())\n    )\n  return (\n    <div className=\"App\">\n     <h1>Monsters Rolodex</h1>\n     <SearchBox  placeholder=\"search monster\" searchWord={(e) => this.handleChange(e)}/>\n     <CardList monster={filterMonster}/>\n    </div>\n  );\n}\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}